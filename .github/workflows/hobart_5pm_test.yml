name: Hansard 5pm Hobart (TEMP TEST)

on:
  # Run near 5pm Hobart in both time zones
  schedule:
    - cron: '0 7 * * *'   # AEST (UTC+10)
    - cron: '0 6 * * *'   # AEDT (UTC+11)

permissions:
  contents: write

env:
  DEFAULT_SEARCH_TERM: 'House of Assembly Tuesday 19 August 2025'
  KEYWORDS: 'pokies,player card'
  WAIT_BEFORE_DOWNLOAD_SECONDS: '15'
  RUN_DATE: '2025-08-22'   # <-- set to TODAY in Hobart for a one-off test

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Gate so it only runs at 5pm on the single RUN_DATE in Hobart
      - name: Gate by Hobart date/time
        run: |
          export TZ=Australia/Hobart
          echo "Hobart now: $(date)"
          if [ "$(date +%F)" != "$RUN_DATE" ]; then
            echo "Not the test date ($RUN_DATE). Exiting."; exit 0; fi
          if [ "$(date +%H)" != "17" ]; then
            echo "Not 5pm Hobart yet. Exiting."; exit 0; fi

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Playwright + email deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install playwright yagmail
          python -m playwright install chromium

      - name: Download transcript
        run: python download_transcript.py "$DEFAULT_SEARCH_TERM"

      - name: Commit downloaded transcript
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add transcripts/*.txt || echo 'No transcripts'
          git commit -m "Add transcript for $DEFAULT_SEARCH_TERM" || echo 'No changes'
          git push

      - name: Validate email secrets present
        run: |
          test -n "${{ secrets.EMAIL_USER }}" || (echo "EMAIL_USER missing" && exit 1)
          test -n "${{ secrets.EMAIL_PASS }}" || (echo "EMAIL_PASS missing" && exit 1)
          test -n "${{ secrets.EMAIL_TO }}"   || (echo "EMAIL_TO missing" && exit 1)
          echo "Secrets are present."

      - name: Send email (digest + attachment)
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_TO:   ${{ secrets.EMAIL_TO }}
          KEYWORDS:   ${{ env.KEYWORDS }}
        run: python send_email.py
